

// Nom du cluster passé en tant que variable de processus
def nom_cluster = execution.getVariable("nom_cluster")
System.out.println("Executing: ${nom_cluster}")

// Exécuter la commande pour obtenir la liste des clusters KIND
def command = "kind get clusters"
def process = command.execute()
def outputStream = new ByteArrayOutputStream()
def errorStream = new ByteArrayOutputStream()
process.waitForProcessOutput(outputStream, errorStream)

// Récupérer la sortie de la commande
def output = outputStream.toString().trim()
def errors = errorStream.toString().trim()

if (errors) {
    // S'il y a des erreurs lors de l'exécution de la commande
    System.out.println("Erreur lors de l'exécution de la commande 'kind get clusters': " + errors)
    execution.setVariable("process_status", "Erreur lors de l'exécution de la commande")
    execution.setVariable("cluster_existe", false)
    throw new RuntimeException("Erreur lors de l'exécution de la commande 'kind get clusters': " + errors)
} else if (!output.contains(nom_cluster)) {
    // Si le nom du cluster n'est pas dans la liste des clusters
    System.out.println("Le cluster '${nom_cluster}' n'existe pas.")
    execution.setVariable("process_status", "Le cluster n'existe pas")
    execution.setVariable("cluster_existe", false)
    // throw new RuntimeException("Le cluster '${nom_cluster}' n'existe pas.")
} else {
    // Si le cluster existe
    System.out.println("Le cluster '${nom_cluster}' existe.")
    execution.setVariable("process_status", "Le cluster existe")
    execution.setVariable("cluster_existe", true)
}

    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
